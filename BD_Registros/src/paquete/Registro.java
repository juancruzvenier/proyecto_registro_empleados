package paquete;

import java.sql.*;
import javax.swing.JOptionPane;

public class Registro extends javax.swing.JFrame {

    Conexion conectar = Conexion.getInstance();

    public Registro() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Registros de Empleados");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        combo_area = new javax.swing.JComboBox<>();
        btn_registrar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        limpiar_campos = new javax.swing.JButton();
        btn_actualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        datos = new javax.swing.JTextArea();
        btn_verificar = new javax.swing.JButton();
        txt_buscar_id = new javax.swing.JTextField();
        btn_buscar_id = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellido:");

        txt_apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apellidoActionPerformed(evt);
            }
        });

        jLabel3.setText("Telefono:");

        txt_telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telefonoActionPerformed(evt);
            }
        });

        jLabel4.setText("Area:");

        combo_area.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Ventas", "Desarrollo", "Marketing", "Finanzas" }));
        combo_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_areaActionPerformed(evt);
            }
        });

        btn_registrar.setText("Registrar Empleado");
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });

        btn_modificar.setText("Modificar Registro");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_eliminar.setText("Eliminar Registro");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        limpiar_campos.setText("Limpiar");
        limpiar_campos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar_camposActionPerformed(evt);
            }
        });

        btn_actualizar.setText("Listar Registros");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        datos.setColumns(20);
        datos.setRows(5);
        jScrollPane1.setViewportView(datos);

        btn_verificar.setText("Verificar Registros");
        btn_verificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_verificarActionPerformed(evt);
            }
        });

        btn_buscar_id.setText("Buscar por ID");
        btn_buscar_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_idActionPerformed(evt);
            }
        });

        jLabel5.setText("Panel:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_apellido, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_telefono, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_area, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_registrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpiar_campos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btn_verificar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 6, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_buscar_id)
                                .addComponent(btn_buscar_id, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addGap(1, 1, 1)
                        .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(limpiar_campos)
                        .addGap(0, 92, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_buscar_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_buscar_id)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_verificar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apellidoActionPerformed

    private void txt_telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telefonoActionPerformed

    private void combo_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_areaActionPerformed

    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        // TODO add your handling code here:
        try {
            // guardar la conexion en la variable conexion
            Connection conexion = conectar.conectar();

            // Los preparede statement sirven para insertar eliminar actualizar modificar datos de una bd
            PreparedStatement insertar = conexion.prepareStatement(
                    "INSERT INTO empleados VALUES (?,?,?,?,?)");

            insertar.setString(1, "0");
            insertar.setString(2, txt_nombre.getText());
            insertar.setString(3, txt_apellido.getText());
            insertar.setString(4, txt_telefono.getText());
            insertar.setString(5, combo_area.getSelectedItem().toString());
            insertar.executeUpdate();

            JOptionPane.showMessageDialog(null, "Usted registró un empleado.");

            txt_nombre.setText("");
            txt_apellido.setText("");
            txt_telefono.setText("");
            combo_area.setSelectedItem("Default");

// Aquí reutilizamos el método btn_actualizarActionPerformed para listar los registros actualizados
            btn_actualizarActionPerformed(evt);

            conectar.cerrarConexion();

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error);
        }
    }//GEN-LAST:event_btn_registrarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        // TODO add your handling code here:
        try {

            Connection conexion = conectar.conectar();

            //buscar por ID y modificar
            String id = txt_buscar_id.getText().trim();
            PreparedStatement modificar = conexion.prepareStatement(
                    "UPDATE empleados SET nombre = ?, apellido = ?, telefono = ?, area = ? WHERE id = ?");
            modificar.setString(1, txt_nombre.getText().trim());
            modificar.setString(2, txt_apellido.getText().trim());
            modificar.setString(3, txt_telefono.getText().trim());
            modificar.setString(4, combo_area.getSelectedItem().toString());
            modificar.setString(5, id);

            modificar.executeUpdate();

// Aquí reutilizamos el método btn_actualizarActionPerformed para listar los registros actualizados
            btn_actualizarActionPerformed(evt);

            txt_nombre.setText("");
            txt_apellido.setText("");
            txt_telefono.setText("");
            combo_area.setSelectedItem("Default");

            conectar.cerrarConexion();

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error);
        }

    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        try {

            Connection conexion = conectar.conectar();
            PreparedStatement eliminar = conexion.prepareStatement(
                    "DELETE FROM empleados WHERE id = ?");

            eliminar.setString(1, txt_buscar_id.getText().trim());
            eliminar.executeUpdate();

            JOptionPane.showMessageDialog(null, "Eliminaste un registro.");

            // Aquí reutilizamos el método btn_actualizarActionPerformed para listar los registros actualizados
            btn_actualizarActionPerformed(evt);

            conectar.cerrarConexion();

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error);
        }

    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void limpiar_camposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar_camposActionPerformed
        // TODO add your handling code here:
        txt_nombre.setText("");
        txt_apellido.setText("");
        txt_telefono.setText("");
        combo_area.setSelectedItem("Default");
    }//GEN-LAST:event_limpiar_camposActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        // TODO add your handling code here:
        datos.setText("");

        try {

            Connection conexion = conectar.conectar();
            PreparedStatement seleccionar = conexion.prepareStatement(
                    "SELECT * FROM empleados");
            ResultSet consulta = seleccionar.executeQuery();

            // Agregar la primera fila como encabezado, usando formato para alinear columnas
            datos.append(String.format("%-5s %-15s %-15s %-15s %-15s\n", "id",
                    "nombre", "apellido", "telefono", "area"));
            datos.append(
                    "---------------------------------------------------------------\n");

            // traer los datos a la pantalla
            while (consulta.next()) {
                datos.append(String.format("%-5s %-15s %-15s %-15s %-15s\n",
                        consulta.getString(1), // id
                        consulta.getString(2), // nombre
                        consulta.getString(3), // apellido
                        consulta.getString(4), // telefono
                        consulta.getString(5))); // area
            }

            conectar.cerrarConexion();

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error);
        }
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_verificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_verificarActionPerformed
        // TODO add your handling code here:
        try {

            Connection conexion = conectar.conectar();
            PreparedStatement seleccionar = conexion.prepareStatement(
                    "SELECT * FROM empleados");
            //crear variable tipo ResultSet. El ResultSet crea consultas.
            ResultSet consulta = seleccionar.executeQuery(); // executeQuery sirve para realizar consultas

            if (consulta.next()) {
                JOptionPane.showMessageDialog(null,
                        "La base de datos tiene datos registrados.");
            } else {
                JOptionPane.showMessageDialog(null,
                        "No existen datos registrados.");

            }

            conectar.cerrarConexion();

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error);
        }
    }//GEN-LAST:event_btn_verificarActionPerformed

    private void btn_buscar_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_idActionPerformed
        // TODO add your handling code here:

        // buscar por ID
        try {

            Connection conexion = conectar.conectar();
            String id = txt_buscar_id.getText().trim();
            PreparedStatement buscar_id = conexion.prepareStatement(
                    "SELECT * FROM empleados WHERE id = ?");

            buscar_id.setString(1, id);

            ResultSet consulta = buscar_id.executeQuery();

            while (consulta.next()) {
                txt_nombre.setText(consulta.getString("nombre"));
                txt_apellido.setText(consulta.getString("apellido"));
                txt_telefono.setText(consulta.getString("telefono"));
                combo_area.setSelectedItem(consulta.getString("area"));
            }

            conectar.cerrarConexion();

        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error);
        }
    }//GEN-LAST:event_btn_buscar_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_buscar_id;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JButton btn_verificar;
    private javax.swing.JComboBox<String> combo_area;
    private javax.swing.JTextArea datos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar_campos;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_buscar_id;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
